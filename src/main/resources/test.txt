INT a;
func INT foo(){
    PRINT a;
    return 1;
}

func INT foo(INT a){
    return a;
}

func INT foo(INT a, BOOL b){
    return a;
}

foo();
foo(a);
foo(a,true);

a = foo();
a = foo(2);
a = foo(3,true);
a = foo(a,true);

a = foo() + 5;
a = foo(2) + foo(3,true);

IF(!foo(3)){}
IF(foo() >= 0){}
IF(foo(a,true) != 0){}
IF(foo() < foo(5)){}

#####==================================

INT a;
BOOL b;

struct SFoo{
    INT a;
}

struct SFoo2{
    INT a;
    BOOL b;
}

SFoo sfoo = new struct SFoo();
sfoo.a;

SFoo2 sfoo2 = new struct SFoo2();
a = sfoo2.a;
b = sfoo2.b;

a = sfoo.a + 2;
a = sfoo.a + sfoo2.a;

IF(!sfoo2.b){}
IF(sfoo.a >= 0){}
IF(sfoo.a != sfoo2.a){}

#####==================================

INT a;
BOOL b;

struct SFoo{
    INT a;
}

class CFoo{
    INT a;
    BOOL b;
}

class CFoo2{
    INT a;

    SFoo sfoo = new struct SFoo();

    CFoo cfoo = new class CFoo();

    func INT getFoo(INT a){
        return a;
    }
}

CFoo cfoo = new class CFoo();
cfoo.a;
b = cfoo.b;

CFoo2 cfoo2 = new class CFoo2();
a = cfoo2.a;                                         #blad

cfoo2.sfoo;
cfoo2.sfoo.a;

a = cfoo2.cfoo.a;

a = getFoo(3);

a = cfoo2.a + getFoo(3);
a = foo.a + foo2.a;

IF(cfoo2.a >= 0){}
IF(getFoo(3) != cfoo2.a){}
